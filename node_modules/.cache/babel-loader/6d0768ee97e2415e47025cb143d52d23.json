{"remainingRequest":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\store\\index.js","mtime":1543484192000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from \"vuex-persistedstate\";\nimport SettingModule from \"./modules/setting.js\";\nimport SettingPlugin from \"./plugins/setting.js\";\nimport ThemeModule from \"./modules/theme.js\";\nimport ThemePlugin from \"./plugins/theme.js\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  modules: {\n    setting: SettingModule,\n    theme: ThemeModule\n  },\n  plugins: [createPersistedState({\n    reducer: function reducer(persistedState) {\n      var stateFilter = JSON.parse(JSON.stringify(persistedState)); // deep clone\n\n      ['offsidebarOpen', 'asideToggled', 'horizontal'] // states which we don't want to persist.\n      .forEach(function (item) {\n        return delete stateFilter.setting[item];\n      });\n      return stateFilter;\n    }\n  }), SettingPlugin, ThemePlugin]\n});",{"version":3,"sources":["C:/Users/Renato/Documents/thuorProject/thuor/src/store/index.js"],"names":["Vue","Vuex","createPersistedState","SettingModule","SettingPlugin","ThemeModule","ThemePlugin","use","Store","modules","setting","theme","plugins","reducer","persistedState","stateFilter","JSON","parse","stringify","forEach","item"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AAEA,OAAOC,aAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AAEAN,GAAG,CAACO,GAAJ,CAAQN,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACO,KAAT,CAAe;AAC1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEP,aADJ;AAELQ,IAAAA,KAAK,EAAEN;AAFF,GADiB;AAK1BO,EAAAA,OAAO,EAAE,CACLV,oBAAoB,CAAC;AACjBW,IAAAA,OAAO,EAAE,iBAACC,cAAD,EAAoB;AACzB,UAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,cAAf,CAAX,CAApB,CADyB,CACuC;;AAChE,OAAC,gBAAD,EAAmB,cAAnB,EAAmC,YAAnC,EAAiD;AAAjD,OACKK,OADL,CACa,UAAAC,IAAI;AAAA,eAAI,OAAOL,WAAW,CAACL,OAAZ,CAAoBU,IAApB,CAAX;AAAA,OADjB;AAEA,aAAOL,WAAP;AACH;AANgB,GAAD,CADf,EASLX,aATK,EAULE,WAVK;AALiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport createPersistedState from \"vuex-persistedstate\";\r\n\r\nimport SettingModule from './modules/setting.js'\r\nimport SettingPlugin from './plugins/setting.js'\r\nimport ThemeModule from './modules/theme.js'\r\nimport ThemePlugin from './plugins/theme.js'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n    modules: {\r\n        setting: SettingModule,\r\n        theme: ThemeModule\r\n    },\r\n    plugins: [\r\n        createPersistedState({\r\n            reducer: (persistedState) => {\r\n                const stateFilter = JSON.parse(JSON.stringify(persistedState)); // deep clone\r\n                ['offsidebarOpen', 'asideToggled', 'horizontal'] // states which we don't want to persist.\r\n                    .forEach(item => delete stateFilter.setting[item])\r\n                return stateFilter\r\n            }\r\n        }),\r\n        SettingPlugin,\r\n        ThemePlugin\r\n    ]\r\n})"]}]}