{"remainingRequest":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\api\\loginAPI.js","dependencies":[{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\api\\loginAPI.js","mtime":1587317080955},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var axios = require(\"axios\");\n\nimport constantes from \"./constantes\";\nimport API_HEADERS from \"../api/configAxios\";\nvar API_LOGIN = {\n  EfetuarLogin: function EfetuarLogin(login, senha) {\n    return new Promise(function (resolve, reject) {\n      console.log(\"Login URL\", constantes.WEBSITEAPI + constantes.PATH_LOGIN);\n      axios.post(constantes.WEBSITEAPI + constantes.PATH_LOGIN, {\n        email: login,\n        senha: senha\n      }).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  VerificaToken: function VerificaToken() {\n    var _this = this;\n\n    var LUser = JSON.parse(sessionStorage.getItem(\"user\"));\n\n    if (LUser == null) {\n      this.$router.push('login');\n    }\n\n    axios.interceptors.response.use(function (response) {\n      if (response.status === 401) {\n        _this.$router.push('login');\n      }\n    });\n    axios.get(constantes.WEBSITEAPI, API_HEADERS.getHeader()).then(function (res) {\n      console.log(\"Retorno Get\", res);\n    }).catch(function (error) {\n      console.log(\"Retorno Erro\", error);\n    });\n  }\n};\nexport default API_LOGIN;",{"version":3,"sources":["C:/Users/Renato/Documents/thuorProject/thuor/src/api/loginAPI.js"],"names":["axios","require","constantes","API_HEADERS","API_LOGIN","EfetuarLogin","login","senha","Promise","resolve","reject","console","log","WEBSITEAPI","PATH_LOGIN","post","email","then","response","catch","error","VerificaToken","LUser","JSON","parse","sessionStorage","getItem","$router","push","interceptors","use","status","get","getHeader","res"],"mappings":"AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,IAAIC,SAAS,GAAG;AACdC,EAAAA,YADc,wBACDC,KADC,EACMC,KADN,EACa;AACzB,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,UAAU,CAACW,UAAX,GAAwBX,UAAU,CAACY,UAA5D;AACAd,MAAAA,KAAK,CACFe,IADH,CACQb,UAAU,CAACW,UAAX,GAAwBX,UAAU,CAACY,UAD3C,EACuD;AACnDE,QAAAA,KAAK,EAAEV,KAD4C;AAEnDC,QAAAA,KAAK,EAAEA;AAF4C,OADvD,EAKGU,IALH,CAKQ,UAAUC,QAAV,EAAoB;AACxBT,QAAAA,OAAO,CAACS,QAAD,CAAP;AACD,OAPH,EAQGC,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBV,QAAAA,MAAM,CAACU,KAAD,CAAN;AACD,OAVH;AAWD,KAbM,CAAP;AAcD,GAhBa;AAiBdC,EAAAA,aAjBc,2BAiBE;AAAA;;AACd,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAZ;;AACA,QAAIJ,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAKK,OAAL,CAAaC,IAAb,CAAkB,OAAlB;AACD;;AACD5B,IAAAA,KAAK,CAAC6B,YAAN,CAAmBX,QAAnB,CAA4BY,GAA5B,CAAgC,UAACZ,QAAD,EAAc;AAC5C,UAAIA,QAAQ,CAACa,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,QAAA,KAAI,CAACJ,OAAL,CAAaC,IAAb,CAAkB,OAAlB;AACD;AACF,KAJD;AAKA5B,IAAAA,KAAK,CACFgC,GADH,CACO9B,UAAU,CAACW,UADlB,EAC8BV,WAAW,CAAC8B,SAAZ,EAD9B,EAEGhB,IAFH,CAEQ,UAAAiB,GAAG,EAAG;AACVvB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BsB,GAA3B;AACD,KAJH,EAKGf,KALH,CAKS,UAAAC,KAAK,EAAG;AACbT,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BQ,KAA5B;AACD,KAPH;AAQD;AAnCa,CAAhB;AAqCA,eAAehB,SAAf","sourcesContent":["\r\nconst axios = require(\"axios\");\r\nimport constantes from \"./constantes\";\r\nimport API_HEADERS from \"../api/configAxios\";\r\nvar API_LOGIN = {\r\n  EfetuarLogin(login, senha) {\r\n    return new Promise((resolve, reject) => {\r\n      console.log(\"Login URL\", constantes.WEBSITEAPI + constantes.PATH_LOGIN);\r\n      axios\r\n        .post(constantes.WEBSITEAPI + constantes.PATH_LOGIN, {\r\n          email: login,\r\n          senha: senha\r\n        })\r\n        .then(function (response) {\r\n          resolve(response);\r\n        })\r\n        .catch(function (error) {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  VerificaToken() {\r\n    var LUser = JSON.parse(sessionStorage.getItem(\"user\"));\r\n    if (LUser == null) {\r\n      this.$router.push('login');\r\n    }\r\n    axios.interceptors.response.use((response) => {\r\n      if (response.status === 401) {\r\n        this.$router.push('login');\r\n      }\r\n    });\r\n    axios\r\n      .get(constantes.WEBSITEAPI, API_HEADERS.getHeader())\r\n      .then(res =>{\r\n        console.log(\"Retorno Get\", res);\r\n      })\r\n      .catch(error =>{\r\n        console.log(\"Retorno Erro\", error);\r\n      })\r\n  }\r\n}\r\nexport default API_LOGIN \r\n"]}]}