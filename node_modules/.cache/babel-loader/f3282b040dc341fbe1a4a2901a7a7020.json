{"remainingRequest":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\views\\SingleView\\SingleView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\src\\views\\SingleView\\SingleView.vue","mtime":1543484192000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      selectedLanguage: function selectedLanguage() {\n        switch (this.$i18n.i18next.language) {\n          case 'es':\n            return 'Spanish';\n            break;\n\n          case 'en':\n          default:\n            return 'English';\n        }\n      }\n    };\n  },\n  methods: {\n    changeLanguage: function changeLanguage(lang) {\n      this.$i18n.i18next.changeLanguage(lang);\n    }\n  }\n};",{"version":3,"sources":["SingleView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,gBADA,8BACA;AACA,gBAAA,KAAA,KAAA,CAAA,OAAA,CAAA,QAAA;AACA,eAAA,IAAA;AAAA,mBAAA,SAAA;AAAA;;AACA,eAAA,IAAA;AAAA;AAAA,mBAAA,SAAA;AAFA;AAIA;AANA,KAAA;AAQA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,IADA,EACA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA,cAAA,CAAA,IAAA;AACA;AAHA;AAXA,CAAA","sourcesContent":["<template>\r\n    <ContentWrapper>\r\n        <div class=\"content-heading\">\r\n            <div>Single View\r\n                <small>{{$t(\"dashboard.WELCOME\")}}</small>\r\n            </div>\r\n            <!-- START Language list-->\r\n            <div class=\"ml-auto\">\r\n                <b-dropdown id=\"ddown1\" :text=\"selectedLanguage()\" no-caret right>\r\n                    <b-dropdown-item @click=\"changeLanguage('en')\">English</b-dropdown-item>\r\n                    <b-dropdown-item @click=\"changeLanguage('es')\">Spanish</b-dropdown-item>\r\n                </b-dropdown>\r\n            </div>\r\n            <!-- END Language list-->\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 text-center\">\r\n                <h2 class=\"text-thin\">Single view content</h2>\r\n                <p>This project is an application skeleton. You can use it to quickly bootstrap your webapp projects and dev environment for these projects.\r\n                    <br>The seed app doesn't do much and has most of the feature removed so you can add theme as per your needs just following the demo app examples.</p>\r\n            </div>\r\n        </div>\r\n    </ContentWrapper>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                selectedLanguage() {\r\n                    switch(this.$i18n.i18next.language) {\r\n                        case 'es': return 'Spanish'; break;\r\n                        case 'en': default: return 'English';\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            changeLanguage (lang) {\r\n                this.$i18n.i18next.changeLanguage(lang);\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/views/SingleView"}]}