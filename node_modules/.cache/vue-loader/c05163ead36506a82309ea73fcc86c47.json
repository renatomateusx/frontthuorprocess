{"remainingRequest":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loading-spinner\\src\\components\\Circle.vue?vue&type=style&index=0&id=d95d914e&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loading-spinner\\src\\components\\Circle.vue","mtime":1484242116000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Renato\\Documents\\thuorProject\\thuor\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$offset: 187;\n$duration: 1.4s;\n\n.spinner {\n  animation: circle-rotator $duration linear infinite;\n  * {\n    line-height: 0;\n    box-sizing: border-box;\n  }\n}\n\n@keyframes circle-rotator {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(270deg); }\n}\n\n.path {\n  stroke-dasharray: $offset;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  animation:\n          circle-dash $duration ease-in-out infinite,\n          circle-colors ($duration*4) ease-in-out infinite;\n}\n\n@keyframes circle-colors {\n  0% {\n    stroke: #35495e;\n  }\n  25% {\n    stroke: #DE3E35;\n  }\n  50% {\n    stroke: #F7C223;\n  }\n  75% {\n    stroke: #41b883;\n  }\n  100% {\n    stroke: #35495e;\n  }\n}\n\n@keyframes circle-dash {\n  0% {\n    stroke-dashoffset: $offset;\n  }\n  50% {\n    stroke-dashoffset: $offset/4;\n    transform:rotate(135deg);\n  }\n  100% {\n    stroke-dashoffset: $offset;\n    transform:rotate(450deg);\n  }\n}\n",{"version":3,"sources":["Circle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Circle.vue","sourceRoot":"node_modules/vue-loading-spinner/src/components","sourcesContent":["<template>\n  <svg v-bind:style=\"styles\" class=\"spinner spinner--circle\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n    <circle class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n  </svg>\n</template>\n<script>\nexport default {\n  props: {\n    size: {\n      default: '40px'\n    }\n  },\n  computed: {\n    styles () {\n      return {\n        width: this.size,\n        height: this.size\n      }\n    }\n  }\n}\n</script>\n<style lang=\"scss\" scoped>\n\n  $offset: 187;\n  $duration: 1.4s;\n\n  .spinner {\n    animation: circle-rotator $duration linear infinite;\n    * {\n      line-height: 0;\n      box-sizing: border-box;\n    }\n  }\n\n  @keyframes circle-rotator {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(270deg); }\n  }\n\n  .path {\n    stroke-dasharray: $offset;\n    stroke-dashoffset: 0;\n    transform-origin: center;\n    animation:\n            circle-dash $duration ease-in-out infinite,\n            circle-colors ($duration*4) ease-in-out infinite;\n  }\n\n  @keyframes circle-colors {\n    0% {\n      stroke: #35495e;\n    }\n    25% {\n      stroke: #DE3E35;\n    }\n    50% {\n      stroke: #F7C223;\n    }\n    75% {\n      stroke: #41b883;\n    }\n    100% {\n      stroke: #35495e;\n    }\n  }\n\n  @keyframes circle-dash {\n    0% {\n      stroke-dashoffset: $offset;\n    }\n    50% {\n      stroke-dashoffset: $offset/4;\n      transform:rotate(135deg);\n    }\n    100% {\n      stroke-dashoffset: $offset;\n      transform:rotate(450deg);\n    }\n  }\n</style>\n"]}]}